// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using menu_serve_api.Models;

namespace menuserveapi.Migrations
{
    [DbContext(typeof(MenuServeDBContext))]
    [Migration("20180730155430_actual_menu_items")]
    partial class actual_menu_items
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("menu_serve_api.Models.MenuCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("INT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.HasKey("ID");

                    b.ToTable("Menu_Categories");

                    b.HasData(
                        new { ID = 1, DisplayOrder = 1, Name = "Starters" },
                        new { ID = 2, DisplayOrder = 2, Name = "Mains" },
                        new { ID = 3, DisplayOrder = 5, Name = "Drinks" },
                        new { ID = 4, DisplayOrder = 4, Name = "Sides" },
                        new { ID = 5, DisplayOrder = 3, Name = "Deserts" }
                    );
                });

            modelBuilder.Entity("menu_serve_api.Models.MenuItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnName("Details")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<int?>("MenuCategoryID");

                    b.Property<decimal>("Price")
                        .HasColumnName("Price")
                        .HasColumnType("DECIMAL(10, 2)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnName("Short_Description")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.HasKey("ID");

                    b.HasIndex("MenuCategoryID");

                    b.ToTable("Menu_Items");

                    b.HasData(
                        new { ID = 1, Details = "Prawns with a tangy seafood sauce. Served with brown bread and butter.", MenuCategoryID = 1, Price = 4.30m, ShortDescription = "Prawn Cocktail" },
                        new { ID = 2, Details = "Button mushrooms in crispy golden breadcrumbs. Served with BBQ or garlic mayonnaise dip.", MenuCategoryID = 1, Price = 4.20m, ShortDescription = "Golden Breaded Mushrooms" },
                        new { ID = 3, Details = "Please ask for today’s choice. Served with half a baguette and butter.", MenuCategoryID = 1, Price = 3.30m, ShortDescription = "Soup of the Day" },
                        new { ID = 4, Details = "Cajun spiced popcorn chicken served with coleslaw and blue cheese sauce to dunk.", MenuCategoryID = 1, Price = 4.50m, ShortDescription = "Cajun Popcorn Chicken" },
                        new { ID = 5, Details = "Succulent strips of buttermilk chicken coated in crispy breadcrumbs, with sweet chilli sauce or garlic mayonnaise for dipping.", MenuCategoryID = 1, Price = 4.50m, ShortDescription = "Crispy Buttermilk Chicken" },
                        new { ID = 6, Details = "Chicken breast in a mild tikka masala sauce. Served with rice, naan bread, a poppadum and mango chutney.", MenuCategoryID = 2, Price = 10.45m, ShortDescription = "Chicken Tikka Masala" },
                        new { ID = 7, Details = "Pork sausages on a bed of mashed potato, topped with red onion gravy. Served with garden peas.", MenuCategoryID = 2, Price = 10.00m, ShortDescription = "Sausages & Mash" },
                        new { ID = 8, Details = "Two half racks of sticky BBQ baby back pork ribs, covered in extra BBQ sauce. Served with chips, onion rings, corn on the cob and coleslaw.", MenuCategoryID = 2, Price = 13.95m, ShortDescription = "Rack of Ribs" },
                        new { ID = 9, Details = " Beer battered fish served with chips, mushy peas and tartare sauce.", MenuCategoryID = 2, Price = 0.00m, ShortDescription = "Beer Battered Fish & Chips" },
                        new { ID = 10, Details = "Garnished with onion rings and half a grilled tomato. Served with chips and peas.", MenuCategoryID = 2, Price = 13.95m, ShortDescription = "10oz Rump Steak" },
                        new { ID = 11, Details = "Grilled and crowned with a fried egg or pineapple ring. Served with chips and peas.", MenuCategoryID = 2, Price = 11.75m, ShortDescription = "10oz Gammon Steak" },
                        new { ID = 12, Details = "A classic combination of roasted chicken breast, sliced bacon and crispy garlic croutons. Mixed leaves, red onion, tomatoes, carrot, cucumber and a classic vinaigrette dressing on the side.", MenuCategoryID = 2, Price = 11.00m, ShortDescription = "Chicken and Bacon Salad" },
                        new { ID = 13, Details = "A prime beef burger piled with fried onions, mushrooms and peppers, topped with melting Emmental cheese.", MenuCategoryID = 2, Price = 11.25m, ShortDescription = "The Swiss Burger" },
                        new { ID = 14, Details = "Mozzarella and sliced tomatoes.", MenuCategoryID = 2, Price = 11.45m, ShortDescription = "Lovely Rita Pizza" },
                        new { ID = 15, Details = "Pepperoni, Wiltshire ham, mini-meatballs, chipotle pulled chicken and Mozzarella.", MenuCategoryID = 2, Price = 15.25m, ShortDescription = "Mighty Meaty Pizza" },
                        new { ID = 16, Details = "Finest beer brewed in Austria 5.5%.", MenuCategoryID = 3, Price = 3.10m, ShortDescription = "Bottled Beer" },
                        new { ID = 17, Details = "Finest apple cider made in Cornwall 6%.", MenuCategoryID = 3, Price = 3.00m, ShortDescription = "Bottled Cider" },
                        new { ID = 18, Details = "Cola made in America.", MenuCategoryID = 3, Price = 2.00m, ShortDescription = "Bottled Cola" },
                        new { ID = 19, Details = "Diet Cola made in America.", MenuCategoryID = 3, Price = 1.80m, ShortDescription = "Bottled Diet Cola" },
                        new { ID = 20, Details = "Made from volcanic natural springs in France.", MenuCategoryID = 3, Price = 1.80m, ShortDescription = "Bottled Water" },
                        new { ID = 21, Details = "Potato fries with the skin left on, cooked in olive oil.", MenuCategoryID = 4, Price = 2.75m, ShortDescription = "Skin-on Fries" },
                        new { ID = 22, Details = "Stack of Beer battered onion rings cooked in olive oil.", MenuCategoryID = 4, Price = 1.75m, ShortDescription = "Onion Rings" },
                        new { ID = 23, Details = "Ciabatta bread mixed with garlic and herbs and baked.", MenuCategoryID = 4, Price = 2.00m, ShortDescription = "Garlic Ciabatta Bread" },
                        new { ID = 24, Details = "Skin-on fries topped with buttermilk chicken pieces, katsu curry sauce and finished with spring onions and crispy onions.", MenuCategoryID = 4, Price = 4.00m, ShortDescription = "Chicken Katsu Fries" },
                        new { ID = 25, Details = "Rocket, red onion, and cherry tomatoes. Served on a lettuce leaf with caesar dressing.", MenuCategoryID = 4, Price = 1.95m, ShortDescription = "Side salad" },
                        new { ID = 26, Details = "Rich cheesecake on a buttery biscuit base heaped with sweet peaches, tangy pineapple and blueberries, finished with a passion fruit glaze and dusted with toasted coconut. Served with vanilla flavour ice cream.", MenuCategoryID = 5, Price = 4.45m, ShortDescription = "Summer Fruits Cheesecake" },
                        new { ID = 27, Details = "Rich and gooey. Served cold or warm with vanilla flavour ice cream.", MenuCategoryID = 5, Price = 3.95m, ShortDescription = "Chocolate Fudge Cake" },
                        new { ID = 28, Details = "Slices of banana and toffee sauce, in-between layers of banana and butterscotch, and vanilla flavour ice cream. Topped with squirty cream, caramel crunch pieces and a sugar curl.", MenuCategoryID = 5, Price = 4.00m, ShortDescription = "Banana & Butterscotch Sundae" },
                        new { ID = 29, Details = "A slice of good old pie, served with custard.", MenuCategoryID = 5, Price = 3.70m, ShortDescription = "Apple Pie" },
                        new { ID = 30, Details = "Jam Roly Poly sponge served with custard.", MenuCategoryID = 5, Price = 3.95m, ShortDescription = "Jam Roly Poly" }
                    );
                });

            modelBuilder.Entity("menu_serve_api.Models.MenuItem", b =>
                {
                    b.HasOne("menu_serve_api.Models.MenuCategory", "MenuCategory")
                        .WithMany()
                        .HasForeignKey("MenuCategoryID");
                });
#pragma warning restore 612, 618
        }
    }
}
